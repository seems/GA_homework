{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red18\green139\blue4;}
\margl1440\margr1440\vieww15460\viewh15140\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \
\pard\pardeftab720\sl300

\f1 \cf2 \
#read in library class to run knn\
library(class)\
\
#change working directory\
setwd("/Users/Seema/Desktop/GeneralAssembly/R")\
\
#read file\
irisdata <- read.csv("irisdata.csv", header = F)\
\
\cf3 \
#provide var names\
names(irisdata)[1] <- "sep_len"\
names(irisdata)[2] <- "sep_wid"\
names(irisdata)[3] <- "pet_len"\
names(irisdata)[4] <- "pet_wid"\
names(irisdata)[5] <- "class"\
names(irisdata)[6] <- "group"\
colnames(irisdata)\
\
#convert from string to numeric\
irisdata[,1]=as.numeric(irisdata[,1]) \
irisdata[,2]=as.numeric(irisdata[,2]) \
irisdata[,3]=as.numeric(irisdata[,3]) \
irisdata[,4]=as.numeric(irisdata[,4]) \
\
#check data type\
str(irisdata)\
\
#check dim\
#dim(datasetname)\
\
#do a quick summary stats\
summary(irisdata)\
\
#randomize the rows\
set.seed(1)\
rand <- sample(nrow(irisdata))\
irisdata1 = irisdata[rand, ]\
irisdata = irisdata1\
\
#check\
View(irisdata)\
\
\
#create training, test sets and classification vector\
train1 <- irisdata[1:100,]\
c1 <- train1[,5]\
test1 <- irisdata[101:50,]\
\
#create vector with the true values\
test_true <- test1[,5]\
\cf2 \
\
#remove the class variable\cf3 \
#train_true$V1 <- NULL\
#train_true$V2 <- NULL\
#train_true$V3 <- NULL\
#train_true$V4 <- NULL\
#train_true$V6 <- NULL\
\
#making class variable null \
train1$class <- NULL\
train1$group <- NULL\
test1$class <- NULL\
test1$group <- NULL\
\
#run knn function\
pred = knn(train = train1, test = test1, c1, k=1) # k = i \
#pred\
\
#this will give confusion matrix\
conf_matrix = table(pred,test_true)\
\
#convert the table format to data format\
#output_data = as.data.frame.matrix(conf_matrix) \
\
#sum diagonal\
sum_diag = sum(diag(conf_matrix))\
\
sum_matrix = addmargins(conf_matrix)\
accuracy = 100-((sum_diag/sum_matrix)*100)\
View (accuracy)\
\
#attempt at looping\
#for(i in 1:10) (pred = knn(train = train1, test = test1, c1, k=i)) (conf_matrix = table(pred,test_true)) #(summary= (100-((sum(diag(conf_matrix))/((addmargins(conf_matric))*100)))\
\
\
# k = 1, delta = 0;  \
# k = 2, delta = 1.92;  \
# k = 3, delta = 0;  \
# k = 4, delta = 1.92;  \
# k = 5, delta = 1.92;  \
# k = 6, delta = 3.84;\
# k = 7, delta = 3.84; \
# k = 8, delta = 3.84;  \
\
# k = 9, delta = 1.92; \
# k = 10, delta = 1.92;\
# k = 11, delta = 1.92;\
  \
# k = 12, delta = 1.92;  \
\
# k = 13, delta = 1.92;  \
# k = 14, delta = 1.92;  \
# k = 15, delta = 1.92; \
\
# k = 16, delta = 1.92; \
# k = 17, delta = 1.92; \
# k = 18, delta = 3.84; \
# k = 19, delta = 5.76; \
# k = 20, delta = 5.76;  \
    }